{"version":3,"sources":["../../../src/line/models/arc.ts"],"names":["lineStyleObj","solid","dash","ArcModel","texture","updateTexture","createTexture2D","rendererService","update","data","iconService","getCanvas","layer","render","mag","gl","NEAREST","min","premultiplyAlpha","width","height","canvasHeight","getLayerConfig","opacity","lineType","dashArray","forward","lineTexture","iconStep","length","push","getDirty","bind","u_opacity","segmentNumber","u_line_type","u_dash_array","u_blur","u_lineDir","u_texture","u_line_texture","u_icon_step","u_textSize","animateOption","u_aimate","animateOption2Array","u_time","getLayerAnimateTime","on","buildModels","destroy","off","buildLayerModel","moduleName","vertexShader","line_arc2d_vert","fragmentShader","line_arc_frag","triangulation","LineArcTriangulation","depth","enable","blend","getBlend","styleAttributeService","registerStyleAttribute","name","type","AttributeType","Attribute","descriptor","buffer","usage","DYNAMIC_DRAW","FLOAT","size","feature","featureIdx","vertex","attributeIdx","Array","isArray","STATIC_DRAW","iconMap","getIconMap","x","y","BaseModel"],"mappings":"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","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IAnimateOption,\n  IEncodeFeature,\n  ILayerConfig,\n  IModel,\n  IModelUniform,\n  ITexture2D,\n} from '@antv/l7-core';\n\nimport BaseModel from '../../core/BaseModel';\nimport { ILineLayerStyleOptions, lineStyleType } from '../../core/interface';\nimport { LineArcTriangulation } from '../../core/triangulation';\nimport line_arc_frag from '../shaders/line_arc_frag.glsl';\nimport line_arc2d_vert from '../shaders/line_arc_vert.glsl';\nconst lineStyleObj: { [key: string]: number } = {\n  solid: 0.0,\n  dash: 1.0,\n};\nexport default class ArcModel extends BaseModel {\n  protected texture: ITexture2D;\n  public getUninforms(): IModelUniform {\n    const {\n      opacity,\n      lineType = 'solid',\n      dashArray = [10, 5],\n      forward = true,\n      lineTexture = false,\n      iconStep = 100,\n    } = this.layer.getLayerConfig() as ILineLayerStyleOptions;\n\n    if (dashArray.length === 2) {\n      dashArray.push(0, 0);\n    }\n\n    if (this.rendererService.getDirty()) {\n      this.texture.bind();\n    }\n\n    return {\n      u_opacity: opacity || 1,\n      segmentNumber: 30,\n      u_line_type: lineStyleObj[lineType || 'solid'],\n      u_dash_array: dashArray,\n      u_blur: 0.9,\n      u_lineDir: forward ? 1 : -1,\n\n      u_texture: this.texture, // 贴图\n      u_line_texture: lineTexture ? 1.0 : 0.0, // 传入线的标识\n      u_icon_step: iconStep,\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n    };\n  }\n\n  public getAnimateUniforms(): IModelUniform {\n    const { animateOption } = this.layer.getLayerConfig() as ILayerConfig;\n    // console.log('animateOption', animateOption)\n    return {\n      u_aimate: this.animateOption2Array(animateOption as IAnimateOption),\n      u_time: this.layer.getLayerAnimateTime(),\n    };\n  }\n\n  public initModels(): IModel[] {\n    this.updateTexture();\n    this.iconService.on('imageUpdate', this.updateTexture);\n\n    return this.buildModels();\n  }\n\n  public clearModels() {\n    if (this.texture) {\n      this.texture.destroy();\n    }\n    this.iconService.off('imageUpdate', this.updateTexture);\n  }\n\n  public buildModels(): IModel[] {\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'arc2dline',\n        vertexShader: line_arc2d_vert,\n        fragmentShader: line_arc_frag,\n        triangulation: LineArcTriangulation,\n        depth: { enable: false },\n        blend: this.getBlend(),\n      }),\n    ];\n  }\n\n  protected registerBuiltinAttributes() {\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const { size = 1 } = feature;\n          return Array.isArray(size) ? [size[0]] : [size as number];\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'instance', // 弧线起始点信息\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Instance',\n        buffer: {\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 4,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[3], vertex[4], vertex[5], vertex[6]];\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_iconMapUV',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const iconMap = this.iconService.getIconMap();\n          const { texture } = feature;\n          const { x, y } = iconMap[texture as string] || { x: 0, y: 0 };\n          return [x, y];\n        },\n      },\n    });\n  }\n\n  private updateTexture = () => {\n    const { createTexture2D } = this.rendererService;\n    if (this.texture) {\n      this.texture.update({\n        data: this.iconService.getCanvas(),\n      });\n      this.layer.render();\n      return;\n    }\n    this.texture = createTexture2D({\n      data: this.iconService.getCanvas(),\n      mag: gl.NEAREST,\n      min: gl.NEAREST,\n      premultiplyAlpha: false,\n      width: 1024,\n      height: this.iconService.canvasHeight || 128,\n    });\n  };\n}\n"],"file":"arc.js"}