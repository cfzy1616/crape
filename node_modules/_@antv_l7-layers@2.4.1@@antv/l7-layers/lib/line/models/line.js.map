{"version":3,"sources":["../../../src/line/models/line.ts"],"names":["lineStyleObj","solid","dash","LineModel","texture","updateTexture","createTexture2D","rendererService","update","data","iconService","getCanvas","layer","render","mag","gl","NEAREST","min","premultiplyAlpha","width","height","canvasHeight","getLayerConfig","opacity","lineType","dashArray","lineTexture","iconStep","length","push","getDirty","bind","u_opacity","u_line_type","u_dash_array","u_texture","u_line_texture","u_icon_step","u_textSize","animateOption","u_aimate","animateOption2Array","u_time","getLayerAnimateTime","on","buildModels","destroy","off","buildLayerModel","moduleName","vertexShader","line_vert","fragmentShader","line_frag","triangulation","LineTriangulation","primitive","TRIANGLES","blend","getBlend","depth","enable","styleAttributeService","registerStyleAttribute","name","type","AttributeType","Attribute","descriptor","buffer","usage","STATIC_DRAW","FLOAT","size","feature","featureIdx","vertex","attributeIdx","DYNAMIC_DRAW","Array","isArray","normal","iconMap","getIconMap","x","y","url","Promise","resolve","reject","HTMLImageElement","image","Image","crossOrigin","onload","onerror","Error","src","File","URL","createObjectURL","BaseModel"],"mappings":"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","sourcesContent":["import {\n  AttributeType,\n  gl,\n  IAnimateOption,\n  IEncodeFeature,\n  IImage,\n  ILayerConfig,\n  IModel,\n  IModelUniform,\n  ITexture2D,\n} from '@antv/l7-core';\n\nimport BaseModel from '../../core/BaseModel';\nimport { ILineLayerStyleOptions, lineStyleType } from '../../core/interface';\nimport { LineTriangulation } from '../../core/triangulation';\nimport line_frag from '../shaders/line_frag.glsl';\nimport line_vert from '../shaders/line_vert.glsl';\nconst lineStyleObj: { [key: string]: number } = {\n  solid: 0.0,\n  dash: 1.0,\n};\nexport default class LineModel extends BaseModel {\n  protected texture: ITexture2D;\n  public getUninforms(): IModelUniform {\n    const {\n      opacity,\n      lineType = 'solid',\n      dashArray = [10, 5, 0, 0],\n      lineTexture = false,\n      iconStep = 100,\n    } = this.layer.getLayerConfig() as ILineLayerStyleOptions;\n    if (dashArray.length === 2) {\n      dashArray.push(0, 0);\n    }\n\n    if (this.rendererService.getDirty()) {\n      this.texture.bind();\n    }\n\n    return {\n      u_opacity: opacity || 1.0,\n      u_line_type: lineStyleObj[lineType],\n      u_dash_array: dashArray,\n\n      u_texture: this.texture, // 贴图\n      u_line_texture: lineTexture ? 1.0 : 0.0, // 传入线的标识\n      u_icon_step: iconStep,\n      u_textSize: [1024, this.iconService.canvasHeight || 128],\n    };\n  }\n  public getAnimateUniforms(): IModelUniform {\n    const { animateOption } = this.layer.getLayerConfig() as ILayerConfig;\n    return {\n      u_aimate: this.animateOption2Array(animateOption as IAnimateOption),\n      u_time: this.layer.getLayerAnimateTime(),\n    };\n  }\n\n  public initModels(): IModel[] {\n    // const { createTexture2D } = this.rendererService;\n    // this.texture = createTexture2D({\n    //   height: 0,\n    //   width: 0,\n    // });\n    // let url = 'https://gw-office.alipayobjects.com/bmw-prod/e91c3630-b79e-45a3-a2b9-feee4b4ccd41.svg'\n    // this.loadImage(url).then((img) => {\n    //   this.texture = createTexture2D({\n    //     data: img as HTMLImageElement,\n    //     width: (img as HTMLImageElement).width,\n    //     height: (img as HTMLImageElement).height,\n    //   });\n    //   this.layerService.renderLayers();\n    // })\n    this.updateTexture();\n    this.iconService.on('imageUpdate', this.updateTexture);\n\n    return this.buildModels();\n  }\n\n  public clearModels() {\n    if (this.texture) {\n      this.texture.destroy();\n    }\n    this.iconService.off('imageUpdate', this.updateTexture);\n  }\n\n  public buildModels(): IModel[] {\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'line',\n        vertexShader: line_vert,\n        fragmentShader: line_frag,\n        triangulation: LineTriangulation,\n        primitive: gl.TRIANGLES,\n        blend: this.getBlend(),\n        depth: { enable: false },\n      }),\n    ];\n  }\n  protected registerBuiltinAttributes() {\n    // const lineType = this\n    // point layer size;\n    const {\n      lineType = 'solid',\n    } = this.layer.getLayerConfig() as ILineLayerStyleOptions;\n    // if (lineType === 'dash') {\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'distance',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Distance',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[3]];\n        },\n      },\n    });\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'total_distance',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Total_Distance',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[5]];\n        },\n      },\n    });\n    // }\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'size',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Size',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const { size = 1 } = feature;\n          return Array.isArray(size) ? [size[0], size[1]] : [size as number, 0];\n        },\n      },\n    });\n\n    // point layer size;\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'normal',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Normal',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 3,\n        // @ts-ignore\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n          normal: number[],\n        ) => {\n          return normal;\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'miter',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_Miter',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.STATIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 1,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          return [vertex[4]];\n        },\n      },\n    });\n\n    this.styleAttributeService.registerStyleAttribute({\n      name: 'uv',\n      type: AttributeType.Attribute,\n      descriptor: {\n        name: 'a_iconMapUV',\n        buffer: {\n          // give the WebGL driver a hint that this buffer may change\n          usage: gl.DYNAMIC_DRAW,\n          data: [],\n          type: gl.FLOAT,\n        },\n        size: 2,\n        update: (\n          feature: IEncodeFeature,\n          featureIdx: number,\n          vertex: number[],\n          attributeIdx: number,\n        ) => {\n          const iconMap = this.iconService.getIconMap();\n          const { texture } = feature;\n          const { x, y } = iconMap[texture as string] || { x: 0, y: 0 };\n          return [x, y];\n        },\n      },\n    });\n  }\n\n  private loadImage(url: IImage) {\n    return new Promise((resolve, reject) => {\n      if (url instanceof HTMLImageElement) {\n        resolve(url);\n        return;\n      }\n      const image = new Image();\n      image.crossOrigin = 'anonymous';\n      image.onload = () => {\n        resolve(image);\n      };\n      image.onerror = () => {\n        reject(new Error('Could not load image at ' + url));\n      };\n      image.src = url instanceof File ? URL.createObjectURL(url) : url;\n    });\n  }\n\n  private updateTexture = () => {\n    const { createTexture2D } = this.rendererService;\n    if (this.texture) {\n      this.texture.update({\n        data: this.iconService.getCanvas(),\n      });\n      this.layer.render();\n      return;\n    }\n    this.texture = createTexture2D({\n      data: this.iconService.getCanvas(),\n      mag: gl.NEAREST,\n      min: gl.NEAREST,\n      premultiplyAlpha: false,\n      width: 1024,\n      height: this.iconService.canvasHeight || 128,\n    });\n  };\n}\n"],"file":"line.js"}