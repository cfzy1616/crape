{"version":3,"sources":["../src/source.ts"],"names":["mergeCustomizer","objValue","srcValue","Array","isArray","Source","data","cfg","extent","hooks","init","SyncHook","parser","type","transforms","cluster","clusterOptions","enable","radius","maxZoom","zoom","method","mapService","invalidExtent","originData","rawData","clusterIndex","initCfg","tap","excuteParser","initCluster","executeTrans","options","emit","getClusters","caculClusterExtent","id","getLeaves","Infinity","field","Math","floor","forEach","p","properties","point_count","map","item","points","d","statNum","column","statMap","stat","features","feature","length","newFeature","dataArray","find","dataItem","_id","value","name","removeAllListeners","bufferRatio","newBounds","concat","option","sourceParser","trans","tran","Object","assign","call","EventEmitter"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { SyncHook } from '@antv/async-hook';\nimport {\n  IClusterOptions,\n  IMapService,\n  IParseDataItem,\n  IParserCfg,\n  IParserData,\n  ISourceCFG,\n  ITransform,\n  lazyInject,\n  TYPES,\n} from '@antv/l7-core';\nimport { bBoxToBounds, extent, padBounds } from '@antv/l7-utils';\nimport {\n  BBox,\n  Feature,\n  FeatureCollection,\n  Geometries,\n  Properties,\n} from '@turf/helpers';\nimport { EventEmitter } from 'eventemitter3';\nimport { cloneDeep, isFunction, isString, mergeWith } from 'lodash';\n// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport Supercluster from 'supercluster/dist/supercluster';\nimport { getParser, getTransform } from './';\nimport { cluster } from './transform/cluster';\nimport { statMap } from './utils/statistics';\nimport { getColumn } from './utils/util';\n\nfunction mergeCustomizer(objValue: any, srcValue: any) {\n  if (Array.isArray(srcValue)) {\n    return srcValue;\n  }\n}\n\nexport default class Source extends EventEmitter {\n  public data: IParserData;\n\n  // 数据范围\n  public extent: BBox;\n  // 生命周期钩子\n  public hooks = {\n    init: new SyncHook(),\n  };\n\n  public parser: IParserCfg = { type: 'geojson' };\n  public transforms: ITransform[] = [];\n  public cluster: boolean = false;\n  public clusterOptions: Partial<IClusterOptions> = {\n    enable: false,\n    radius: 40,\n    maxZoom: 20,\n    zoom: -99,\n    method: 'count',\n  };\n  private readonly mapService: IMapService;\n  // 是否有效范围\n  private invalidExtent: boolean = false;\n\n  // 原始数据\n  private originData: any;\n  private rawData: any;\n  private cfg: any = {};\n\n  private clusterIndex: Supercluster;\n\n  constructor(data: any, cfg?: ISourceCFG) {\n    super();\n    // this.rawData = cloneDeep(data);\n    this.originData = data;\n    this.initCfg(cfg);\n\n    this.hooks.init.tap('parser', () => {\n      this.excuteParser();\n    });\n    this.hooks.init.tap('cluster', () => {\n      this.initCluster();\n    });\n    this.hooks.init.tap('transform', () => {\n      this.executeTrans();\n    });\n    this.init();\n  }\n\n  public setData(data: any, options?: ISourceCFG) {\n    this.rawData = data;\n    this.originData = data;\n    this.initCfg(options);\n    this.init();\n    this.emit('update');\n  }\n  public getClusters(zoom: number): any {\n    return this.clusterIndex.getClusters(this.caculClusterExtent(2), zoom);\n  }\n  public getClustersLeaves(id: number): any {\n    return this.clusterIndex.getLeaves(id, Infinity);\n  }\n  public updateClusterData(zoom: number): void {\n    const { method = 'sum', field } = this.clusterOptions;\n    let data = this.clusterIndex.getClusters(\n      this.caculClusterExtent(2),\n      Math.floor(zoom),\n    );\n    this.clusterOptions.zoom = zoom;\n    data.forEach((p: any) => {\n      if (!p.id) {\n        p.properties.point_count = 1;\n      }\n    });\n    if (field || isFunction(method)) {\n      data = data.map((item: any) => {\n        const id = item.id as number;\n        if (id) {\n          const points = this.clusterIndex.getLeaves(id, Infinity);\n          const properties = points.map((d: any) => d.properties);\n          let statNum;\n          if (isString(method) && field) {\n            const column = getColumn(properties, field);\n            statNum = statMap[method](column);\n          }\n          if (isFunction(method)) {\n            statNum = method(properties);\n          }\n          item.properties.stat = statNum;\n        } else {\n          item.properties.point_count = 1;\n        }\n        return item;\n      });\n    }\n    this.data = getParser('geojson')({\n      type: 'FeatureCollection',\n      features: data,\n    });\n    this.executeTrans();\n  }\n  public getFeatureById(id: number): unknown {\n    const { type = 'geojson' } = this.parser;\n    if (type === 'geojson' && !this.cluster) {\n      const feature =\n        id < this.originData.features.length\n          ? this.originData.features[id]\n          : 'null';\n      const newFeature = cloneDeep(feature);\n      if (this.transforms.length !== 0) {\n        const item = this.data.dataArray.find((dataItem: IParseDataItem) => {\n          return dataItem._id === id;\n        });\n        newFeature.properties = item;\n      }\n      return newFeature;\n    } else {\n      return id < this.data.dataArray.length ? this.data.dataArray[id] : 'null';\n    }\n  }\n\n  public getFeatureId(field: string, value: any): number | undefined {\n    const feature = this.data.dataArray.find((dataItem: IParseDataItem) => {\n      return dataItem[field] === name;\n    });\n    return feature?._id;\n  }\n\n  public destroy() {\n    this.removeAllListeners();\n    this.originData = null;\n    this.clusterIndex = null;\n    // @ts-ignore\n    this.data = null;\n  }\n\n  private caculClusterExtent(bufferRatio: number): any {\n    let newBounds = [\n      [-Infinity, -Infinity],\n      [Infinity, Infinity],\n    ];\n\n    if (!this.invalidExtent) {\n      newBounds = padBounds(bBoxToBounds(this.extent), bufferRatio);\n    }\n    return newBounds[0].concat(newBounds[1]);\n  }\n\n  private initCfg(option?: ISourceCFG) {\n    this.cfg = mergeWith(this.cfg, option, mergeCustomizer);\n    const cfg = this.cfg;\n    if (cfg) {\n      if (cfg.parser) {\n        this.parser = cfg.parser;\n      }\n      if (cfg.transforms) {\n        this.transforms = cfg.transforms;\n      }\n      this.cluster = cfg.cluster || false;\n      if (cfg.clusterOptions) {\n        this.cluster = true;\n        this.clusterOptions = {\n          ...this.clusterOptions,\n          ...cfg.clusterOptions,\n        };\n      }\n    }\n  }\n  private excuteParser(): void {\n    const parser = this.parser;\n    const type: string = parser.type || 'geojson';\n    const sourceParser = getParser(type);\n    this.data = sourceParser(this.originData, parser);\n    // 计算范围\n    this.extent = extent(this.data.dataArray);\n    this.invalidExtent =\n      this.extent[0] === this.extent[2] || this.extent[1] === this.extent[3];\n  }\n  /**\n   * 数据统计\n   */\n  private executeTrans() {\n    const trans = this.transforms;\n    trans.forEach((tran: ITransform) => {\n      const { type } = tran;\n\n      const data = getTransform(type)(this.data, tran);\n      Object.assign(this.data, data);\n    });\n  }\n\n  private initCluster() {\n    if (!this.cluster) {\n      return;\n    }\n\n    const clusterOptions = this.clusterOptions || {};\n    this.clusterIndex = cluster(this.data, clusterOptions);\n  }\n\n  private init() {\n    this.hooks.init.call(this);\n  }\n}\n"],"file":"source.js"}