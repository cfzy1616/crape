{"version":3,"sources":["../../src/regl/ReglTexture2D.ts"],"names":["ReglTexture2D","reGl","options","texture","width","height","data","type","gl","UNSIGNED_BYTE","flipY","format","RGBA","mipmap","wrapS","CLAMP_TO_EDGE","wrapT","aniso","alignment","premultiplyAlpha","mag","NEAREST","min","colorSpace","BROWSER_DEFAULT_WEBGL","textureOptions","dataTypeMap","formatMap","wrapModeMap","filterMap","colorSpaceMap","mipmapMap","props","_texture","bind","resize","destroy"],"mappings":"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","sourcesContent":["import { gl, ITexture2D, ITexture2DInitializationOptions } from '@antv/l7-core';\nimport regl from 'regl';\nimport {\n  colorSpaceMap,\n  dataTypeMap,\n  filterMap,\n  formatMap,\n  mipmapMap,\n  wrapModeMap,\n} from './constants';\n\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\nexport default class ReglTexture2D implements ITexture2D {\n  private texture: regl.Texture2D;\n  private width: number;\n  private height: number;\n\n  constructor(reGl: regl.Regl, options: ITexture2DInitializationOptions) {\n    const {\n      data,\n      type = gl.UNSIGNED_BYTE,\n      width,\n      height,\n      flipY = false,\n      format = gl.RGBA,\n      mipmap = false,\n      wrapS = gl.CLAMP_TO_EDGE,\n      wrapT = gl.CLAMP_TO_EDGE,\n      aniso = 0,\n      alignment = 1,\n      premultiplyAlpha = false,\n      mag = gl.NEAREST,\n      min = gl.NEAREST,\n      colorSpace = gl.BROWSER_DEFAULT_WEBGL,\n    } = options;\n    this.width = width;\n    this.height = height;\n\n    const textureOptions: regl.Texture2DOptions = {\n      width,\n      height,\n      // @ts-ignore\n      type: dataTypeMap[type],\n      format: formatMap[format],\n      wrapS: wrapModeMap[wrapS],\n      wrapT: wrapModeMap[wrapT],\n      // @ts-ignore\n      mag: filterMap[mag],\n      min: filterMap[min],\n      alignment,\n      flipY,\n      colorSpace: colorSpaceMap[colorSpace],\n      premultiplyAlpha,\n      aniso,\n    };\n\n    if (data) {\n      textureOptions.data = data;\n    }\n\n    if (typeof mipmap === 'number') {\n      textureOptions.mipmap = mipmapMap[mipmap];\n    } else if (typeof mipmap === 'boolean') {\n      textureOptions.mipmap = mipmap;\n    }\n\n    this.texture = reGl.texture(textureOptions);\n  }\n\n  public get() {\n    return this.texture;\n  }\n  public update(props: regl.Texture2DOptions = {}) {\n    this.texture(props);\n  }\n\n  public bind() {\n    // @ts-ignore\n    this.texture._texture.bind();\n  }\n\n  public resize({ width, height }: { width: number; height: number }): void {\n    this.texture.resize(width, height);\n    this.width = width;\n    this.height = height;\n  }\n\n  public destroy() {\n    this.texture.destroy();\n  }\n}\n"],"file":"ReglTexture2D.js"}